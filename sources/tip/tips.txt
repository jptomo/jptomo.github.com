:orphan:

====
tips
====

personal snipetts

*under construction*

.. contents::
   :local:

find/grep で検索
================

.. code-block:: console

   $ find . -name ".git" -prune -o -name "*.py" -print0 \
     | xargs -0r grep -in some

プロセスをツリーで表示
======================

.. code-block:: console

   $ ps -efjH

smb をマウント
==============

.. code-block:: console

   # dnf install cifs-utils

   # cat > /etc/samba_cred
   username=user123
   password=password123
   domain=WORKSPACE1
   # chmod 0700 /etc/samba_cred

   # mount -t cifs //BNAME/Document /mnt \
     -o credentials=/etc/samba_cred,uid=1000,gid=1000,netbiosname=BNAME,iocharset=utf8,rw

ただし、以下を想定している。

:netbios name: BNAME
:domain: WORKSPACE1
:username: user123
:password: password123

Vim
====

良い感じに適当にファイルを修正できるモードライン
------------------------------------------------

2行書く。

::

  vim:list lcs=tab\:>-,extends\:<,trail\:-,eol\:$ fdm=marker:
  vim:ts=4 sts=4 sw=4 tw=0 fenc=utf-8 ff=unix:

Vim で cp932 のファイルを開く
-----------------------------

.. code-block:: console

   $ alias edit='vim -c ":e ++enc=cp932"'
   $ edit file_of_cp932.txt

OSX kaoriya Vim で各言語の拡張について利用したいものを指定する
--------------------------------------------------------------

::

  let $PERL_DLL = "/usr/local/opt/perl/lib/5.20.1/darwin-thread-multi-2level/CORE/libperl.dylib"
  let $PYTHON_DLL = "/Library/Frameworks/Python.framework/Versions/2.7/lib/libpython2.7.dylib"
  let $PYTHON3_DLL="/Library/Frameworks/Python.framework/Versions/3.5/lib/libpython3.5.dylib"
  let $RUBY_DLL = "/usr/local/homebrew/Cellar/ruby21/2.1.5/lib/libruby.2.1.dylib"
  let $LUA_DLL="/usr/local/homebrew/opt/lua/lib/liblua.5.2.3.dylib"

MySQL dump で圧縮してダンプする
===============================

.. code-block:: console

   $ mysqldump -u user -p -h host --default-character-set=binary \
     -c --compact -n -t dbname tables \
     | gzip > mysqldump-`date +%Y_%m%d_%H%M%S`.sql.gz

Docker
======

特定の Dockerfile でビルド
--------------------------

.. code-block:: console

   $ docker build -t local-xxx -f Dockerfile .

コンテナ削除
------------

.. code-block:: console

   $ docker rm `docker ps -a -q`

(none) image 削除
-----------------

.. code-block:: console

   $ docker rmi `docker images | awk '/^<none>/ { print $3 }'`
